import axios from 'axios';

// Configura√ß√£o da ISAPI HikCentral
const ISAPI_CONFIG = {
  baseUrl: 'http://45.4.132.189',
  username: 'luca',
  password: 'Luca123#',
  timeout: 30000
};

async function testISAPI() {
  console.log('üîç Testando ISAPI do HikCentral...');
  console.log('üìç URL:', ISAPI_CONFIG.baseUrl);
  console.log('üë§ Usu√°rio:', ISAPI_CONFIG.username);
  
  try {
    // 1. Testar conex√£o b√°sica
    console.log('\n1Ô∏è‚É£ Testando conex√£o b√°sica...');
    const response = await axios.get(`${ISAPI_CONFIG.baseUrl}/ISAPI/System/deviceInfo`, {
      auth: {
        username: ISAPI_CONFIG.username,
        password: ISAPI_CONFIG.password
      },
      timeout: ISAPI_CONFIG.timeout
    });
    
    console.log('‚úÖ Conex√£o ISAPI bem-sucedida!');
    console.log('üìä Resposta:', response.data);
    
    // 2. Testar listagem de dispositivos
    console.log('\n2Ô∏è‚É£ Testando listagem de dispositivos...');
    const devicesResponse = await axios.get(`${ISAPI_CONFIG.baseUrl}/ISAPI/Device/list`, {
      auth: {
        username: ISAPI_CONFIG.username,
        password: ISAPI_CONFIG.password
      },
      timeout: ISAPI_CONFIG.timeout
    });
    
    console.log('‚úÖ Dispositivos encontrados!');
    console.log('üìä Dispositivos:', devicesResponse.data);
    
    // 3. Testar cria√ß√£o de usu√°rio
    console.log('\n3Ô∏è‚É£ Testando cria√ß√£o de usu√°rio...');
    const testUser = {
      userName: 'Teste Visitante ISAPI',
      cardNo: 'TEST002',
      userType: 'visitor',
      phoneNumber: '11999999999',
      email: 'teste@exemplo.com'
    };
    
    const userResponse = await axios.post(`${ISAPI_CONFIG.baseUrl}/ISAPI/User/create`, testUser, {
      auth: {
        username: ISAPI_CONFIG.username,
        password: ISAPI_CONFIG.password
      },
      timeout: ISAPI_CONFIG.timeout,
      headers: {
        'Content-Type': 'application/json'
      }
    });
    
    console.log('‚úÖ Usu√°rio criado com sucesso!');
    console.log('üìä Resposta:', userResponse.data);
    
  } catch (error) {
    console.error('‚ùå Erro na ISAPI:', error.message);
    
    if (error.response) {
      console.error('üìä Status:', error.response.status);
      console.error('üìä Dados:', error.response.data);
    }
    
    // Tentar endpoints alternativos
    console.log('\nüîÑ Tentando endpoints alternativos...');
    
    const alternativeEndpoints = [
      '/ISAPI/System/info',
      '/ISAPI/System/status',
      '/ISAPI/Device/info',
      '/ISAPI/User/info',
      '/ISAPI/System/deviceInfo',
      '/ISAPI/System/deviceInfo?format=json'
    ];
    
    for (const endpoint of alternativeEndpoints) {
      try {
        console.log(`üîç Testando: ${endpoint}`);
        const altResponse = await axios.get(`${ISAPI_CONFIG.baseUrl}${endpoint}`, {
          auth: {
            username: ISAPI_CONFIG.username,
            password: ISAPI_CONFIG.password
          },
          timeout: 5000
        });
        
        console.log(`‚úÖ ${endpoint} funcionou!`);
        console.log('üìä Resposta:', altResponse.data);
        break;
      } catch (altError) {
        console.log(`‚ùå ${endpoint} falhou:`, altError.message);
      }
    }
  }
}

testISAPI(); 